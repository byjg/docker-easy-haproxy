{% set log_definition = data["logLevel"] | default({}) %}
{% set log_level = log_definition["haproxy"] | default("INFO") | upper %}
{% if log_level == "TRACE" or log_level == "DEBUG" %}
{% set haproxy_log_level = "debug" %}
{% elif log_level == "INFO" %}
{% set haproxy_log_level = "info" %}
{% elif log_level == "WARN" %}
{% set haproxy_log_level = "warning" %}
{% elif log_level == "ERROR" %}
{% set haproxy_log_level = "err" %}
{% elif log_level == "FATAL" %}
{% set haproxy_log_level = "crit" %}
{% endif %}
global
    log stdout  format raw  local0  {{ haproxy_log_level }}
    maxconn 2000
{% if data["ssl_mode"] == "strict" %}
{% include "ssl_strict.j2" %}
{% elif data["ssl_mode"] == "loose" %}
{% include "ssl_loose.j2" %}
{% else %}
{% include "ssl_default.j2" %}
{% endif %}


defaults
    log global
    option httplog

    timeout connect    3s
    timeout client    10s
    timeout server    10m
{% if data["customerrors"] %}
    errorfile 400 /etc/haproxy/errors-custom/400.http
    errorfile 403 /etc/haproxy/errors-custom/403.http
    errorfile 408 /etc/haproxy/errors-custom/408.http
    errorfile 500 /etc/haproxy/errors-custom/500.http
    errorfile 502 /etc/haproxy/errors-custom/502.http
    errorfile 503 /etc/haproxy/errors-custom/503.http
    errorfile 504 /etc/haproxy/errors-custom/504.http
{% endif %}

{% set data_stats = data["stats"] | default({}) %}
{% if data_stats["port"] | default(1936) | int > 0 %}
frontend stats
    bind *:{{ data_stats["port"] | default(1936) }}
    mode http
    http-request use-service prometheus-exporter if { path /metrics }
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /
    {% if data_stats["password"] | default("") != "" %}
    stats auth {{ data_stats["username"] | default("admin") }}:{{ data_stats["password"] }}
    {% endif %}
    default_backend srv_stats

backend srv_stats
    mode http
    server Local 127.0.0.1:{{ data_stats["port"] | default(1936) }}
{% endif %}
{% for o in data["easymapping"] -%}
    {% set mode = o["mode"] or "http" %}

frontend {{ mode }}_in_{{ o["port"] }}
    {% include "bind.j2" %}
    {% if mode == "http" %}
        {% include "frontend-mode-http.j2" %}
    {% else %}
        {% include "frontend-mode-tcp.j2" %}
    {% endif %}

    {% for k in o["hosts"] -%}
        {% set host = k.replace(".", "_") + "_{0}".format(o["port"]) %}
backend srv_{{ host }}
    balance {{ o["balance"] | default("roundrobin") }}
    mode {{ mode }}
        {% if mode == "http" %}
    option forwardfor
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
        {% elif mode == "tcp" %}
    option tcp-check
    tcp-check connect{{ " ssl" if o["ssl-check"] == "ssl" }}
        {% endif %}
        {% for c in o["hosts"][k]["containers"] %}
    server srv-{{ loop.index0 }} {{ c }} check weight 1{{ " verify none" if o["ssl-check"] == "ssl" }}
        {% endfor %}
    {% endfor %}
{% endfor %}

backend certbot_backend
    mode http
    server certbot 127.0.0.1:2080

